

 1. Projete o hardware necessário para o MSP430 controlar um motor DC de 12V e 4A. Utilize transistores bipolares de junção (TBJ) 
   com Vbe = 0,7 V, beta = 100 e Vce(saturação) = 0,2 V. Além disso, considere que Vcc = 3 V para o MSP430, e que este não pode fornecer mais do que 10 mA por porta digital.

   Considerando que um transistor suporte a corrente do motor DC e considerando uma Ic= 4 A. Logo a corrente de base será:

   Ib = Ic / 100 = 4 / 100 = 40 mA.

    Como a corrente de base ultrapassa a corrente que a porta digital pode fornecer, então deve-se utilizar dois transistores, na forma do par Darlington. Então a corrente de base será:

   Ib = Ic / ß2 = 4 /10000 = 0,4 mA

   O resistor Rb = (Vcc – 2*Vbe)/Ib = (3 – 2*0,7)/0,4*10^(-3) = 4 Kohm


 2. Projete o hardware necessário para o MSP430 controlar um motor DC de 10V e 1A. Utilize transistores bipolares de junção (TBJ) 
com Vbe = 0,7 V e beta = 120. Além disso, considere que Vcc = 3,5 V para o MSP430, e que este não pode fornecer mais do que 10 mA
por porta digital.

  A corrente de coletor Ic é 1A, Logo a corrente de base será:

    Ib = Ic/ß = 1/120 = 8,33 mA.
    Rb = (Vcc-Vbe)/Ib = (Vcc-Vbe)*ß/Ic = ((3,5 - 0,7)*120)/1 = 336 ohm


3. Projete o hardware utilizado para controlar 6 LEDs utilizando charlieplexing. Apresente os pinos utilizados no MSP430 e os LEDs,
nomeados L1-L6.

Utilizaremos 3 pinos: P1.1,P1.2,P1.4;

      P1DIR &= ~ (P1.1 , P1.2=1 , P1.4=0)   //LED 1 (L1)   P1.1 ESTÁ COMO ENTRADA DIGITAL
      P1DIR &= ~ (P1.1 , P1.2=0 , P1.4=1)   //LED 2 (L2)   P1.1 ESTÁ COMO ENTRADA DIGITAL
      P1DIR &= ~ (P1.1=1 , P1.2=0 ,P1.4 )   //LED 3 (L3)   P1.4 ESTÁ COMO ENTRADA DIGITAL
      P1DIR &= ~ (P1.4 , P1.1=0 , P1.2=1)   //LED 4 (L4)   P1.4 ESTÁ COMO ENTRADA DIGITAL
      P1DIR &= ~ (P1.2 , P1.4=0 ,P1.1=1 )   //LED 5 (L5)   P1.2 ESTÁ COMO ENTRADA DIGITAL
      P1DIR &= ~ (P1.2 , P1.4=1 ,P1.1=0 )   //LED 6 (L6)   P1.2 ESTÁ COMO ENTRADA DIGITAL

4. Defina a função void main(void){} para controlar 6 LEDs de uma árvore de natal usando o hardware da questão anterior. Acenda os
LEDs de forma que um ser humano veja todos acesos ao mesmo tempo.

#include<msp430g2553.h>
int main(void)

WDTCTL = WDTPW|WDTHOLD;
while(1)
{       
//LED 1
	P1DIR &= ~ BIT1;       
	P1DIR|= (BIT2+ ~BIT4); 
	P1REN|= (BIT2+ ~BIT4);
	P1OUT|= (BIT2+ ~BIT4);	 
//LED2
	P1DIR &= ~ BIT1; 
	P1DIR|= (BIT4+ ~BIT2); 
	P1REN|= (BIT4+ ~BIT2);
	P1OUT|= (BIT4+ ~BIT2);	
//LED 3
	P1DIR &= ~ BIT4; 
	P1DIR|= (BIT1+ ~BIT2); 
	P1REN|= (BIT1+ ~BIT2);
	P1OUT|= (BIT1+ ~BIT2);
//LED4
	P1DIR &= ~ BIT4; 
	P1DIR|= (BIT2+ ~BIT1); 
	P1REN|= (BIT2+ ~BIT1);
	P1OUT|= (BIT2+ ~BIT1);
//LED5
	P1DIR &= ~ BIT2; 
	P1DIR|= (BIT1+ ~BIT4); 
	P1REN|= (BIT1+ ~BIT4);
	P1OUT|= (BIT1+ ~BIT4);
//LED6
	P1DIR &= ~ BIT2; 
	P1DIR|= (BIT4+ ~BIT1); 
	P1REN|= (BIT4+ ~BIT1);
	P1OUT|= (BIT4+ ~BIT1);      
	
	
}

